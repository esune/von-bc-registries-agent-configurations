---
kind: Template
apiVersion: v1
metadata:
  name: ${NAME}-deployment-template
  annotations:
    description: Deployment template for a ${NAME} instance.
objects:

  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow the agent and event processor to access the controller.
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  role: ${AGENT_ROLE}
                  app: ${APP_NAME}${SUFFIX}
                  env: ${TAG_NAME}
              namespaceSelector:
                matchLabels:
                  name: ${NAMESPACE_NAME}
                  environment: ${TAG_NAME}
            - podSelector:
                matchLabels:
                  role: ${EVENT_PROCESSOR_ROLE}
                  app: ${APP_NAME}${SUFFIX}
                  env: ${TAG_NAME}
              namespaceSelector:
                matchLabels:
                  name: ${NAMESPACE_NAME}
                  environment: ${TAG_NAME}
          ports:
            - protocol: TCP
              port: ${{HOST_PORT}}
      podSelector:
        matchLabels:
          role: ${ROLE}
          app: ${APP_NAME}${SUFFIX}
          env: ${TAG_NAME}


  # - kind: NetworkSecurityPolicy
  #   apiVersion: security.devops.gov.bc.ca/v1alpha1
  #   metadata:
  #     name: ${NAME}${SUFFIX}
  #     labels:
  #       name: ${NAME}${SUFFIX}
  #       app: ${APP_NAME}${SUFFIX}
  #       app-group: ${APP_GROUP}
  #       env: ${TAG_NAME}
  #   spec:
  #     description: |
  #       Allow the controller pods to communicate with the agent pods.
  #     source:
  #       - - role=${ROLE}
  #         - app=${APP_NAME}${SUFFIX}
  #         - env=${TAG_NAME}
  #         - $namespace=${NAMESPACE}-${TAG_NAME}
  #     destination:
  #       - - role=${AGENT_ROLE}
  #         - app=${APP_NAME}${SUFFIX}
  #         - env=${TAG_NAME}
  #         - $namespace=${NAMESPACE}-${TAG_NAME}

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      cr-agent-admin-api-url: ${CR_AGENT_ADMIN_URL}
      cr-agent-admin-api-key: ${CR_ADMIN_API_KEY}
    type: Opaque

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      ports:
        - name: ${NAME}-http
          protocol: TCP
          port: ${{HOST_PORT}}
          targetPort: ${{HOST_PORT}}
      selector:
        name: ${NAME}${SUFFIX}

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        description: Defines how to deploy the container.
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}${SUFFIX}
            from:
              kind: ImageStreamTag
              namespace: ${IMAGE_NAMESPACE}
              name: ${NAME}:${TAG_NAME}
      replicas: 1
      selector:
        name: ${NAME}${SUFFIX}
      template:
        metadata:
          name: ${NAME}${SUFFIX}
          labels:
            name: ${NAME}${SUFFIX}
            app: ${APP_NAME}${SUFFIX}
            app-group: ${APP_GROUP}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          containers:
            - name: ${NAME}${SUFFIX}
              image:  
              ports:
                - containerPort: ${{HOST_PORT}}
                  protocol: TCP
              env:
                - name: CONFIG_ROOT
                  value: ${CONFIG_ROOT}
                - name: HOST_PORT
                  value: ${HOST_PORT}
                - name: ENVIRONMENT
                  value: ${ENVIRONMENT}
                - name: AGENT_ADMIN_URL
                  value: http://${AGENT_SERVICE_NAME}${SUFFIX}:${AGENT_ADMIN_PORT}
                - name: AGENT_ADMIN_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${AGENT_SERVICE_NAME}${SUFFIX}
                      key: admin-api-key
                - name: TOB_AGENT_ADMIN_URL
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: cr-agent-admin-api-url
                - name: TOB_ADMIN_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}${SUFFIX}
                      key: cr-agent-admin-api-key
                - name: WEB_CONCURRENCY
                  value: ${WEB_CONCURRENCY}
                - name: WORKER_THREADS
                  value: ${WORKER_THREADS}
                - name: MAX_CRED_RESPONSE_TIMEOUT
                  value: ${MAX_CRED_RESPONSE_TIMEOUT}
              readinessProbe:
                timeoutSeconds: 30
                initialDelaySeconds: 3
                httpGet:
                  path: /health
                  port: ${{HOST_PORT}}
              livenessProbe:
                timeoutSeconds: 30
                initialDelaySeconds: 300
                httpGet:
                  path: /health
                  port: ${{HOST_PORT}}
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}

  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: ${NAME}${SUFFIX}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}
parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the objects defined in this template.
    required: true
    value: bcreg-controller

  - name: ROLE
    displayName: Role
    description: Role
    required: true
    value: controller
  - name: AGENT_ROLE
    displayName: Agent role
    description: The name given to the agent role.
    required: true
    value: agent
  - name: EVENT_PROCESSOR_ROLE
    displayName: Event Processor Role
    description: Event Processor Role
    required: true
    value: event-processor

  - name: NAMESPACE
    displayName: The target namespace for the resources.
    required: true
    value: 7cba16
  - name: SUFFIX
    displayName: Suffix
    description: A name suffix used for all objects
    required: false
    value: -primary
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: BcRegistriesAgent
  - name: APP_GROUP
    displayName: App Group
    description: The name assigned to all of the deployments in this project.
    required: true
    value: primary-instance
  - name: IMAGE_NAMESPACE
    displayName: Image Namespace
    required: true
    description:
      The namespace of the OpenShift project containing the imagestream for
      the application.
    value: 7cba16-tools
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod
    required: true
    value: dev
  - name: CONFIG_ROOT
    displayName: Config Root
    description: The root directory containing the application configuration.
    required: true
    value: ../config
  - name: HOST_PORT
    displayName: Host Port
    description: The port on which the agent service will listen.
    required: true
    value: "8080"
  - name: ENVIRONMENT
    displayName: Environment
    description: The application environment.
    required: true
    value: default
  - name: AGENT_SERVICE_NAME
    displayName: Agent Service name
    description: Agent service name
    required: true
    value: agent
  - name: AGENT_ADMIN_PORT
    displayName: Agent Admin Port
    description: Agent admin port
    required: true
    value: "8024"
  - name: CR_AGENT_ADMIN_URL
    displayName: Credential Registry Admin API Url
    description: Credential registry admin api url
    required: true
    value: 
  - name: CR_ADMIN_API_KEY
    displayName: Credential Registry Admin API Key
    description: Credential registry admin api key
    required: true
    value: 
  - name: WEB_CONCURRENCY
    displayName: Web Concurrency
    description: Sets the number of worker processes.
    required: true
    value: "1"
  - name: WORKER_THREADS
    displayName: Worker Threads
    description: Sets the maximum number of worker threads.
    required: true
    value: "160"
  - name: MAX_CRED_RESPONSE_TIMEOUT
    displayName: Maximum Credential Response Timeout
    description:
      Sets the maximum time (in seconds) to wait for a credential response
      message before giving up.
    required: true
    value: "90"
  - name: MIN_REPLICAS
    displayName: Minimum Replicas
    description: The minimum number of pods to have running.
    required: true
    value: "1"
  - name: MAX_REPLICAS
    displayName: Maximum Replicas
    description: The maximum number of pods to have running.
    required: true
    value: "1"
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 1000m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 10Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 1000Mi
